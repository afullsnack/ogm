---
import AccountSwitch from "@components/header/AccountSwitch";
import TotalBalance from "@components/header/TotalBalance";
import { Dropdown as DropdownContainer, DropdownItems } from "astro-navbar";
const { title } = Astro.props;
const balance = 10000;
const liveBalance = 0;
const account = Astro.url.searchParams.get("account")! || "demo";
---

<div class="relative max-w-max lg:w-[400px] w-full">
  <DropdownContainer class="group">
    <button
      class="grid items-start justify-items-start justify-center gap-1 text-gray-200 hover:text-gray-400">
      <div class="flex items-center gap-1 w-full lg:w-auto lg:px-0">
        <span
          class:list={[
            "capitalize",
            account === "demo"
              ? "text-orange-600 hover:text-orange-400"
              : "text-green-600 hover:text-green-400",
          ]}>{account} account</span
        >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="3"
          stroke="currentColor"
          class:list={[
            "w-3 h-3 mt-0.5 group-open:rotate-180",
            account === "demo"
              ? "text-orange-600 hover:text-orange-400"
              : "text-green-600 hover:text-green-400",
          ]}>
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
        </svg>
      </div>
      <TotalBalance accountType={account as "demo" | "live"} client:only />
    </button>
    <DropdownItems class="z-50 min-w-max">
      <div
        class:list={[
          "absolute w-[calc(w-screen - 30px)] min-w-max lg:w-[450px] z-50",
          "lg:right-0 origin-top-right right-1",
        ]}>
        <AccountSwitch client:load accountType={account as "demo" | "live"} />
      </div>
    </DropdownItems>
  </DropdownContainer>
</div>
